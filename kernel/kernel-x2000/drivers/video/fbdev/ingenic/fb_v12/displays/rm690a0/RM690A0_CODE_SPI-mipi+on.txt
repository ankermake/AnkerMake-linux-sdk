	    SPI_CMD(0XFE);SPI_DATA(0X01);
	    SPI_CMD(0X04);SPI_DATA(0XA0);  //SPI write ram enable
	    SPI_CMD(0X05);SPI_DATA(0X70);  //128RGB, T->B, NW
	    SPI_CMD(0X06);SPI_DATA(0X49);  //NL = 292 line (New modify)
	    SPI_CMD(0X09);SPI_DATA(0X01);  //NL2 = 1 (New modify)
	    SPI_CMD(0X0E);SPI_DATA(0X80);  //AVDD = 6.5V normal mode (New modify)
	    SPI_CMD(0X0F);SPI_DATA(0X80);  //AVDD = 6.5V idle mode (New modify)
	    SPI_CMD(0X10);SPI_DATA(0X11);  //AVDD = 2xVCI, AVDD regulator enable
	    SPI_CMD(0X11);SPI_DATA(0XA2);  //VCL = -1xVCI, -3.3V normal mode
	    SPI_CMD(0X12);SPI_DATA(0XA2);  //VCL = -1xVCI, -3.3V idle mode
	    SPI_CMD(0X13);SPI_DATA(0X80);  //VGH = AVDD normal mode
	    SPI_CMD(0X14);SPI_DATA(0X80);  //VGH = AVDD idle mode
	    SPI_CMD(0X15);SPI_DATA(0X81);  //VGL = VCL-VCI normal mode
	    SPI_CMD(0X16);SPI_DATA(0X81);  //VGL = VCL-VCI idle mode
	    SPI_CMD(0X18);SPI_DATA(0X66);  //VGHR =6V normal/idle mode
	    SPI_CMD(0X19);SPI_DATA(0X88);  //VGLR =-6V normal/idle mode
	    SPI_CMD(0X1D);SPI_DATA(0X02);  //Switch EQ on
	    SPI_CMD(0X1E);SPI_DATA(0X02);  //Switch EQ on
	    SPI_CMD(0X1F);SPI_DATA(0X02);  //VSR EQ on
	    SPI_CMD(0X20);SPI_DATA(0X02);  //VSR EQ on

	    SPI_CMD(0X25);SPI_DATA(0X06);  //Normal mode: gamma1, 24bit, PSELA=2b'01
	    SPI_CMD(0X26);SPI_DATA(0X17);  //T1A = 217(535x100ns= 53.5us)
	    SPI_CMD(0X27);SPI_DATA(0X0A);  //normal mode VBP= 10
	    SPI_CMD(0X28);SPI_DATA(0X0A);  //normal mode VFP= 10
	    SPI_CMD(0X29);SPI_DATA(0X01);  //normal mode skip frame off
	    SPI_CMD(0X2A);SPI_DATA(0X06);  //idle mode: gamma1, 24bit, PSELA=2b'01
	    SPI_CMD(0X2B);SPI_DATA(0X17);  //T1B = 217(535x100ns= 53.5us)
	    SPI_CMD(0X2D);SPI_DATA(0X0A);  //idle mode VBP= 10
	    SPI_CMD(0X2F);SPI_DATA(0X0A);  //idle mode VFP= 10
	    SPI_CMD(0X30);SPI_DATA(0X43);  //idle mode skip frame = 60/4 = 15Hz

	    SPI_CMD(0X36);SPI_DATA(0X00);  //RM690A0, AP= 3b'000
	    SPI_CMD(0X37);SPI_DATA(0X0C);  //precharge to VGSP, mux 1:6

	    //MUX
	    SPI_CMD(0X3A);SPI_DATA(0X1E);  //T1_sd=3us
	    SPI_CMD(0X3B);SPI_DATA(0X00); //Tp_sd=0us
	    SPI_CMD(0X3D);SPI_DATA(0X0A);  //Th_sd=1us
	    SPI_CMD(0X3F);SPI_DATA(0X28);  //Tsw_sd=4us
	    SPI_CMD(0X40);SPI_DATA(0X0A);  //Thsw_sd=1us
	    SPI_CMD(0X41);SPI_DATA(0X06);  //Thsd_sd

	    SPI_CMD(0X42);SPI_DATA(0X36);  //Mux 362514, odd/even line SWAP
	    SPI_CMD(0X43);SPI_DATA(0X63);
	    SPI_CMD(0X44);SPI_DATA(0X25);
	    SPI_CMD(0X45);SPI_DATA(0X52);
	    SPI_CMD(0X46);SPI_DATA(0X14);
	    SPI_CMD(0X47);SPI_DATA(0X41);
	    SPI_CMD(0X48);SPI_DATA(0X36);
	    SPI_CMD(0X49);SPI_DATA(0X63);
	    SPI_CMD(0X4A);SPI_DATA(0X25);
	    SPI_CMD(0X4B);SPI_DATA(0X52);
	    SPI_CMD(0X4C);SPI_DATA(0X14);
	    SPI_CMD(0X4D);SPI_DATA(0X41);
	    SPI_CMD(0X4E);SPI_DATA(0X36);  //Data B1B2G1G2R1R2, odd/even line SWAP
	    SPI_CMD(0X4F);SPI_DATA(0X63);
	    SPI_CMD(0X50);SPI_DATA(0X25);
	    SPI_CMD(0X51);SPI_DATA(0X52);
	    SPI_CMD(0X52);SPI_DATA(0X14);
	    SPI_CMD(0X53);SPI_DATA(0X41);
	    SPI_CMD(0X54);SPI_DATA(0X36);
	    SPI_CMD(0X55);SPI_DATA(0X63);
	    SPI_CMD(0X56);SPI_DATA(0X25);
	    SPI_CMD(0X57);SPI_DATA(0X52);
	    SPI_CMD(0X58);SPI_DATA(0X14);
	    SPI_CMD(0X59);SPI_DATA(0X41);

	    SPI_CMD(0X5B);SPI_DATA(0X10);  //VREFN5 on
	    SPI_CMD(0X62);SPI_DATA(0X19);  //VREFN5 = -3V normal mode
	    SPI_CMD(0X63);SPI_DATA(0X19);  //VREFN5 = -3V idle mode

	    SPI_CMD(0X66);SPI_DATA(0X90);  //idle mode internal power
	    SPI_CMD(0X67);SPI_DATA(0X40);  //internal power delay 1 frame off
        SPI_CMD(0X6A);SPI_DATA(0X05);  //swire 05 pulse, -2V for RT4723


	    SPI_CMD(0X6C);SPI_DATA(0X80);  //RM690A0, OP setting (sop turn off during sw off)
	    SPI_CMD(0X6D);SPI_DATA(0X39);  //skip frame VGMP and VGSP regulator off
	    SPI_CMD(0X6E);SPI_DATA(0X00);  //MIPI interface on
	    SPI_CMD(0X70);SPI_DATA(0XA8);  //Display on blanking 1: SD to GND; other region: SD to AVDD
	    SPI_CMD(0X72);SPI_DATA(0X1A); //internal OVDD = 4.6V
	    SPI_CMD(0X73);SPI_DATA(0X11);  //internal OVSS = -2V
	    SPI_CMD(0X74);SPI_DATA(0X0C);  //OVDD power from AVDD, source power from AVDD

	    SPI_CMD(0XFE);SPI_DATA(0X02);
	    SPI_CMD(0XA9);SPI_DATA(0X30);  //VGMP = 130 ,5.8V (New modify)
	    SPI_CMD(0XAA);SPI_DATA(0XB8);  //VGSP = 0B8 ,2.5V
	    SPI_CMD(0XAB);SPI_DATA(0X01);  //VGMP VGSP high byte

	    SPI_CMD(0XFE);SPI_DATA(0X03);
	    SPI_CMD(0XA9);SPI_DATA(0X30);  //VGMP = 130 ,5.8V (New modify)
	    SPI_CMD(0XAA);SPI_DATA(0XB8);  //VGSP = 0B8 ,2.5V
	    SPI_CMD(0XAB);SPI_DATA(0X01);  //VGMP VGSP high byte

	    SPI_CMD(0XFE);SPI_DATA(0X04);

	    //SN_STV SET
	    SPI_CMD(0X4c);SPI_DATA(0X89);
	    SPI_CMD(0X4d);SPI_DATA(0X00);
	    SPI_CMD(0X4e);SPI_DATA(0X00);
	    SPI_CMD(0X4f);SPI_DATA(0X40);
	    SPI_CMD(0X50);SPI_DATA(0X01);
	    SPI_CMD(0X51);SPI_DATA(0X01);
	    SPI_CMD(0X52);SPI_DATA(0X16);
	    //SN_CK1 SET
	    SPI_CMD(0X00);SPI_DATA(0Xcc);
	    SPI_CMD(0X01);SPI_DATA(0X00);
	    SPI_CMD(0X02);SPI_DATA(0X02);
	    SPI_CMD(0X03);SPI_DATA(0X00);
	    SPI_CMD(0X04);SPI_DATA(0X48);
	    SPI_CMD(0X05);SPI_DATA(0X03);
	    SPI_CMD(0X06);SPI_DATA(0X76);
	    SPI_CMD(0X07);SPI_DATA(0X16);
	    SPI_CMD(0X08);SPI_DATA(0X08);
	    //SN_CK2 SET
	    SPI_CMD(0X09);SPI_DATA(0Xcc);
	    SPI_CMD(0X0a);SPI_DATA(0X00);
	    SPI_CMD(0X0b);SPI_DATA(0X02);
	    SPI_CMD(0X0c);SPI_DATA(0X00);
	    SPI_CMD(0X0d);SPI_DATA(0X48);
	    SPI_CMD(0X0e);SPI_DATA(0X02);
	    SPI_CMD(0X0f);SPI_DATA(0X76);
	    SPI_CMD(0X10);SPI_DATA(0X16);
	    SPI_CMD(0X11);SPI_DATA(0X08);
	    //EM_CK1 SET
	    SPI_CMD(0X12);SPI_DATA(0Xcc);
	    SPI_CMD(0X13);SPI_DATA(0X00);
	    SPI_CMD(0X14);SPI_DATA(0X02);
	    SPI_CMD(0X15);SPI_DATA(0X00);
	    SPI_CMD(0X16);SPI_DATA(0X20);
	    SPI_CMD(0X17);SPI_DATA(0X02);
	    SPI_CMD(0X18);SPI_DATA(0X32);
	    SPI_CMD(0X19);SPI_DATA(0Xe4);
	    SPI_CMD(0X1a);SPI_DATA(0X08);
	    //EM_CK2 SET
	    SPI_CMD(0X1b);SPI_DATA(0Xcc);
	    SPI_CMD(0X1c);SPI_DATA(0X00);
	    SPI_CMD(0X1d);SPI_DATA(0X02);
	    SPI_CMD(0X1e);SPI_DATA(0X00);
	    SPI_CMD(0X1f);SPI_DATA(0X20);
	    SPI_CMD(0X20);SPI_DATA(0X03);
	    SPI_CMD(0X21);SPI_DATA(0X32);
	    SPI_CMD(0X22);SPI_DATA(0Xe4);
	    SPI_CMD(0X23);SPI_DATA(0X08);
	    //EM SET
	    SPI_CMD(0X53);SPI_DATA(0X8a);
	    SPI_CMD(0X54);SPI_DATA(0X40);
	    SPI_CMD(0X55);SPI_DATA(0X02);
	    SPI_CMD(0X56);SPI_DATA(0X01);
	    SPI_CMD(0X58);SPI_DATA(0X16);
	    SPI_CMD(0X59);SPI_DATA(0X02);
	    SPI_CMD(0X65);SPI_DATA(0X02);
	    SPI_CMD(0X66);SPI_DATA(0X04);
	    SPI_CMD(0X67);SPI_DATA(0X00);


	    //VSR mapping
	    SPI_CMD(0X5E);SPI_DATA(0X01);
	    SPI_CMD(0X5F);SPI_DATA(0XC8);
	    SPI_CMD(0X60);SPI_DATA(0XCC);
	    SPI_CMD(0X61);SPI_DATA(0XCC);
	    SPI_CMD(0X62);SPI_DATA(0XCC);
	    SPI_CMD(0X75);SPI_DATA(0XCC);
	    SPI_CMD(0X76);SPI_DATA(0X3C);
	    SPI_CMD(0X77);SPI_DATA(0X92);
	    SPI_CMD(0X78);SPI_DATA(0XCC);
	    SPI_CMD(0X79);SPI_DATA(0XCC);
	    SPI_CMD(0X9C);SPI_DATA(0XF8);
	    SPI_CMD(0X9D);SPI_DATA(0XC7);
	    SPI_CMD(0X9E);SPI_DATA(0X33);

	    //SW mapping
	    SPI_CMD(0XA2);SPI_DATA(0XCC);
	    SPI_CMD(0XA3);SPI_DATA(0X3C);
	    SPI_CMD(0XA4);SPI_DATA(0X54);
	    SPI_CMD(0XA5);SPI_DATA(0X10);
	    SPI_CMD(0XA6);SPI_DATA(0XC2);
	    SPI_CMD(0XA7);SPI_DATA(0XCC);
	    SPI_CMD(0X9F);SPI_DATA(0X3F);
	    SPI_CMD(0XA0);SPI_DATA(0X3F);

	    //Hi-z
	    SPI_CMD(0X63);SPI_DATA(0XF8);
	    SPI_CMD(0X7A);SPI_DATA(0XC7);
	    SPI_CMD(0X8D);SPI_DATA(0X1F);
	    SPI_CMD(0X8E);SPI_DATA(0XE3);

	    //Gamma OP setting
	    SPI_CMD(0X64);SPI_DATA(0X0E);

		SPI_CMD(0xFE); SPI_DATA(0x00);
		SPI_CMD(0xC4); SPI_DATA(0x80); 
		SPI_CMD(0x2A); SPI_DATA(0x00);SPI_DATA(0x00);SPI_DATA(0x00); SPI_DATA(0x7D);
		SPI_CMD(0x35); SPI_DATA(0x00);
		SPI_CMD(0x51); SPI_DATA(0xff);
		SPI_CMD(0x11);
		Delayms(120);
		SPI_CMD(0x29);
	    Delayms(80);
