/*
 * include/linux/mfd/ricoh619.h
 *
 * Core driver interface to access RICOH R5T619 power management chip.
 *
 * Copyright (C) 2020 Ingenic Semiconductor Co., Ltd.
 * Author: cljiang <conglong.jiang@ingenic.com>
 *
 * Based on code
 *  ./rn5t567.h
 *	Copyright (C) 2011 NVIDIA Corporation
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 */

#ifndef __LINUX_MFD_RICOH619_H
#define __LINUX_MFD_RICOH619_H

#include <linux/regmap.h>

/* Maximum number of main interrupts */
#define MAX_INTERRUPT_MASKS 13
#define MAX_MAIN_INTERRUPT  7
#define MAX_GPEDGE_REG      2

/* Power control register */
#define RICOH61x_PWR_WD			0x0B
#define RICOH61x_PWR_WD_COUNT		0x0C
#define RICOH61x_PWR_FUNC		0x0D
#define RICOH61x_PWR_SLP_CNT		0x0E
#define RICOH61x_PWR_REP_CNT		0x0F
#define RICOH61x_PWR_ON_TIMSET		0x10
#define RICOH61x_PWR_NOE_TIMSET		0x11
#define RICOH61x_PWR_IRSEL		0x15

/* DC/LDO control register */
#define RICOH61x_DC1_CTL		0x2C
#define RICOH61x_DC1_CTL2		0x2D
#define RICOH61x_DC2_CTL		0x2E
#define RICOH61x_DC2_CTL2		0x2F
#define RICOH61x_DC3_CTL		0x30
#define RICOH61x_DC3_CTL2		0x31
#define RICOH61x_DC4_CTL		0x32
#define RICOH61x_DC4_CTL2		0x33
#define RICOH61x_DC5_CTL		0x34
#define RICOH61x_DC5_CTL2		0x35
#define RICOH61x_LDOECO_SLP		0x4a

/* Interrupt enable register */
#define RICOH61x_INT_EN_SYS		0x12
#define RICOH61x_INT_EN_DCDC		0x40
#define RICOH61x_INT_EN_RTC		0xAE
#define RICOH61x_INT_EN_ADC1		0x88
#define RICOH61x_INT_EN_ADC2		0x89
#define RICOH61x_INT_EN_ADC3		0x8A
#define RICOH61x_INT_EN_GPIO		0x94
#define RICOH61x_INT_EN_GPIO2		0x94 /* dummy */
#define RICOH61x_INT_MSK_CHGCTR		0xBE
#define RICOH61x_INT_MSK_CHGSTS1	0xBF
#define RICOH61x_INT_MSK_CHGSTS2	0xC0
#define RICOH61x_INT_MSK_CHGERR		0xC1
#define RICOH61x_INT_MSK_CHGEXTIF	0xD1

/* Interrupt select register */
#define RICOH61x_CHG_CTRL_DETMOD1	0xCA
#define RICOH61x_CHG_CTRL_DETMOD2	0xCB
#define RICOH61x_CHG_STAT_DETMOD1	0xCC
#define RICOH61x_CHG_STAT_DETMOD2	0xCD
#define RICOH61x_CHG_STAT_DETMOD3	0xCE


/* interrupt status registers (monitor regs)*/
#define RICOH61x_INTC_INTPOL		0x9C
#define RICOH61x_INTC_INTEN		0x9D
#define RICOH61x_INTC_INTMON		0x9E

#define RICOH61x_INT_MON_SYS		0x14
#define RICOH61x_INT_MON_DCDC		0x42
#define RICOH61x_INT_MON_RTC		0xAF

#define RICOH61x_INT_MON_CHGCTR		0xC6
#define RICOH61x_INT_MON_CHGSTS1	0xC7
#define RICOH61x_INT_MON_CHGSTS2	0xC8
#define RICOH61x_INT_MON_CHGERR		0xC9
#define RICOH61x_INT_MON_CHGEXTIF	0xD3

/* interrupt clearing registers */
#define RICOH61x_INT_IR_SYS		0x13
#define RICOH61x_INT_IR_DCDC		0x41
#define RICOH61x_INT_IR_RTC		0xAF
#define RICOH61x_INT_IR_ADCL		0x8C
#define RICOH61x_INT_IR_ADCH		0x8D
#define RICOH61x_INT_IR_ADCEND		0x8E
#define RICOH61x_INT_IR_GPIOR		0x95
#define RICOH61x_INT_IR_GPIOF		0x96
#define RICOH61x_INT_IR_CHGCTR		0xC2
#define RICOH61x_INT_IR_CHGSTS1		0xC3
#define RICOH61x_INT_IR_CHGSTS2		0xC4
#define RICOH61x_INT_IR_CHGERR		0xC5
#define RICOH61x_INT_IR_CHGEXTIF	0xD2

/* GPIO register base address */
#define RICOH61x_GPIO_IOSEL		0x90
#define RICOH61x_GPIO_IOOUT		0x91
#define RICOH61x_GPIO_GPEDGE1		0x92
#define RICOH61x_GPIO_GPEDGE2		0x93
/* #define RICOH61x_GPIO_EN_GPIR	0x94 */
/* #define RICOH61x_GPIO_IR_GPR		0x95 */
/* #define RICOH61x_GPIO_IR_GPF		0x96 */
#define RICOH61x_GPIO_MON_IOIN		0x97
#define RICOH61x_GPIO_LED_FUNC		0x98

#define RICOH61x_REG_BANKSEL		0xFF

/* Charger Control register */
#define RICOH61x_CHG_CTL1		0xB3
#define	TIMSET_REG			0xB9
#define	RICOH61x_CHG_STATE	       	0xBD

/* ADC Control register */
#define RICOH61x_ADC_CNT1		0x64
#define RICOH61x_ADC_CNT2		0x65
#define RICOH61x_ADC_CNT3		0x66
#define RICOH61x_ADC_VADP_THL		0x7C
#define RICOH61x_ADC_VSYS_THL		0x80

#define	RICOH61x_FG_CTRL		0xE0
#define	RICOH61x_PSWR			0x07
/* RICOH61x IRQ definitions */
enum {
	RICOH61x_IRQ_POWER_ON,
	RICOH61x_IRQ_EXTIN,
	RICOH61x_IRQ_PRE_VINDT,
	RICOH61x_IRQ_PREOT,
	RICOH61x_IRQ_POWER_OFF,
	RICOH61x_IRQ_NOE_OFF,
	RICOH61x_IRQ_WD,
	RICOH61x_IRQ_CLK_STP,

	RICOH61x_IRQ_DC1LIM,
	RICOH61x_IRQ_DC2LIM,
	RICOH61x_IRQ_DC3LIM,
	RICOH61x_IRQ_DC4LIM,
	RICOH61x_IRQ_DC5LIM,

	RICOH61x_IRQ_ILIMLIR,
	RICOH61x_IRQ_VBATLIR,
	RICOH61x_IRQ_VADPLIR,
	RICOH61x_IRQ_VUSBLIR,
	RICOH61x_IRQ_VSYSLIR,
	RICOH61x_IRQ_VTHMLIR,
	RICOH61x_IRQ_AIN1LIR,
	RICOH61x_IRQ_AIN0LIR,

	RICOH61x_IRQ_ILIMHIR,
	RICOH61x_IRQ_VBATHIR,
	RICOH61x_IRQ_VADPHIR,
	RICOH61x_IRQ_VUSBHIR,
	RICOH61x_IRQ_VSYSHIR,
	RICOH61x_IRQ_VTHMHIR,
	RICOH61x_IRQ_AIN1HIR,
	RICOH61x_IRQ_AIN0HIR,

	RICOH61x_IRQ_ADC_ENDIR,

	RICOH61x_IRQ_GPIO0,
	RICOH61x_IRQ_GPIO1,
	RICOH61x_IRQ_GPIO2,
	RICOH61x_IRQ_GPIO3,
	RICOH61x_IRQ_GPIO4,

	RICOH61x_IRQ_CTC,
	RICOH61x_IRQ_DALE,

	RICOH61x_IRQ_FVADPDETSINT,
	RICOH61x_IRQ_FVUSBDETSINT,
	RICOH61x_IRQ_FVADPLVSINT,
	RICOH61x_IRQ_FVUSBLVSINT,
	RICOH61x_IRQ_FWVADPSINT,
	RICOH61x_IRQ_FWVUSBSINT,

	RICOH61x_IRQ_FONCHGINT,
	RICOH61x_IRQ_FCHGCMPINT,
	RICOH61x_IRQ_FBATOPENINT,
	RICOH61x_IRQ_FSLPMODEINT,
	RICOH61x_IRQ_FBTEMPJTA1INT,
	RICOH61x_IRQ_FBTEMPJTA2INT,
	RICOH61x_IRQ_FBTEMPJTA3INT,
	RICOH61x_IRQ_FBTEMPJTA4INT,

	RICOH61x_IRQ_FCURTERMINT,
	RICOH61x_IRQ_FVOLTERMINT,
	RICOH61x_IRQ_FICRVSINT,
	RICOH61x_IRQ_FPOOR_CHGCURINT,
	RICOH61x_IRQ_FOSCFDETINT1,
	RICOH61x_IRQ_FOSCFDETINT2,
	RICOH61x_IRQ_FOSCFDETINT3,
	RICOH61x_IRQ_FOSCMDETINT,

	RICOH61x_IRQ_FDIEOFFINT,
	RICOH61x_IRQ_FDIEERRINT,
	RICOH61x_IRQ_FBTEMPERRINT,
	RICOH61x_IRQ_FVBATOVINT,
	RICOH61x_IRQ_FTTIMOVINT,
	RICOH61x_IRQ_FRTIMOVINT,
	RICOH61x_IRQ_FVADPOVSINT,
	RICOH61x_IRQ_FVUSBOVSINT,

	RICOH61x_IRQ_FGCDET,
	RICOH61x_IRQ_FPCDET,
	RICOH61x_IRQ_FWARN_ADP,

	/* Should be last entry */
	RICOH61x_NR_IRQS,
};

#define	RICOH61x_IRQ_FCHGCMPINT1 45
#define RICOH61x_IRQ_FVADPDETSINT1 39

/* RICOH61x gpio definitions */
enum {
	RICOH61x_GPIO0,
	RICOH61x_GPIO1,
	RICOH61x_GPIO2,
	RICOH61x_GPIO3,
	RICOH61x_GPIO4,

	RICOH61x_NR_GPIO,
};

#define RICOH619_LSIVER			0x00
#define RICOH619_OTPVER			0x01
#define RICOH619_IODAC			0x02
#define RICOH619_VINDAC			0x03


#define RICOH619_OUT32KEN       0x05
#define RICOH619_CPUCNT			0x06
#define RICOH619_PSWR			0x07


#define RICOH619_PONHIS			0x09
#define RICOH619_POFFHIS		0x0a
#define RICOH619_WATCHDOG		0x0b
#define RICOH619_WATCHDOGCNT	0x0c
#define RICOH619_PWRFUNC		0x0d
#define RICOH619_SLPCNT			0x0e
#define RICOH619_REPCNT			0x0f
#define RICOH619_PWRONTIMSET	0x10
#define RICOH619_NOETIMSETCNT	0x11
#define RICOH619_PWRIREN		0x12
#define RICOH619_PWRIRQ			0x13
#define RICOH619_PWRMON			0x14
#define RICOH619_PWRIRSEL		0x15
#define RICOH619_DC1_SLOT		0x16
#define RICOH619_DC2_SLOT		0x17
#define RICOH619_DC3_SLOT		0x18
#define RICOH619_DC4_SLOT		0x19
#define RICOH619_DC5_SLOT		0x1a
#define RICOH619_LDO1_SLOT		0x1b
#define RICOH619_LDO2_SLOT		0x1c
#define RICOH619_LDO3_SLOT		0x1d
#define RICOH619_LDO4_SLOT		0x1e
#define RICOH619_LDO5_SLOT		0x1f
#define RICOH619_LDO6_SLOT		0x20
#define RICOH619_LDO7_SLOT		0x21
#define RICOH619_LDO8_SLOT		0x22
#define RICOH619_LDO9_SLOT		0x23
#define RICOH619_LDO10_SLOT		0x24
#define RICOH619_PSO0_SLOT		0x25
#define RICOH619_PSO1_SLOT		0x26
#define RICOH619_PSO2_SLOT		0x27
#define RICOH619_PSO3_SLOT		0x28
#define RICOH619_PSO4_SLOT		0x29
#define RICOH619_LDORTC1_SLOT	0x2a
#define RICOH619_DC1CTL			0x2c
#define RICOH619_DC1CTL2		0x2d
#define RICOH619_DC2CTL			0x2e
#define RICOH619_DC2CTL2		0x2f
#define RICOH619_DC3CTL			0x30
#define RICOH619_DC3CTL2		0x31
#define RICOH619_DC4CTL			0x32
#define RICOH619_DC4CTL2		0x33
#define RICOH619_DC5CTL			0x34
#define RICOH619_DC5CTL2		0x35
#define RICOH619_DC1DAC			0x36
#define RICOH619_DC2DAC			0x37
#define RICOH619_DC3DAC			0x38
#define RICOH619_DC4DAC			0x39
#define RICOH619_DC5DAC			0x3a
#define RICOH619_DC1DAC_SLP		0x3b
#define RICOH619_DC2DAC_SLP		0x3c
#define RICOH619_DC3DAC_SLP		0x3d
#define RICOH619_DC4DAC_SLP		0x3e
#define RICOH619_DC5DAC_SLP		0x3f
#define RICOH619_DCIREN			0x40
#define RICOH619_DCIRQ			0x41
#define RICOH619_DCIRMON		0x42
#define RICOH619_LDOEN1			0x44
#define RICOH619_LDOEN2			0x45
#define RICOH619_LDODIS1		0x46
#define RICOH619_LDODIS2		0x47
#define RICOH619_LDOECO			0x48

#define RICOH619_LDOECO_SLP     0x4a

#define RICOH619_LDO1DAC		0x4c
#define RICOH619_LDO2DAC		0x4d
#define RICOH619_LDO3DAC		0x4e
#define RICOH619_LDO4DAC		0x4f
#define RICOH619_LDO5DAC		0x50
#define RICOH619_LDO6DAC		0x51
#define RICOH619_LDO7DAC		0x52
#define RICOH619_LDO8DAC		0x53
#define RICOH619_LDO9DAC		0x54
#define RICOH619_LDO10DAC		0x55
#define RICOH619_LDORTC1DAC	    0x56
#define RICOH619_LDORTC2DAC	    0x57
#define RICOH619_LDO1DAC_SLP	0x58
#define RICOH619_LDO2DAC_SLP	0x59
#define RICOH619_LDO3DAC_SLP	0x5a
#define RICOH619_LDO4DAC_SLP	0x5b
#define RICOH619_LDO5DAC_SLP	0x5c
#define RICOH619_LDO6DAC_SLP	0x5d
#define RICOH619_LDO7DAC_SLP	0x5e
#define RICOH619_LDO8DAC_SLP	0x5f
#define RICOH619_LDO9DAC_SLP	0x60
#define RICOH619_LDO10DAC_SLP	0x61


#define RICOH619_ADCCNT1		0x64
#define RICOH619_ADCCNT2		0x65
#define RICOH619_ADCCNT3		0x66
#define RICOH619_ILIMDATAH		0x68
#define RICOH619_ILIMDATAL		0x69
#define RICOH619_VBATDATAH		0x6a
#define RICOH619_VBATDATAL		0x6b
#define RICOH619_VADPDATAH		0x6c
#define RICOH619_VADPDATAL		0x6d
#define RICOH619_VUSBDATAH		0x6e
#define RICOH619_VUSBDATAL		0x6f
#define RICOH619_VSYSDATAH		0x70
#define RICOH619_VSYSDATAL		0x71
#define RICOH619_VTHMDATAH		0x72
#define RICOH619_VTHMDATAL		0x73
#define RICOH619_AIN1DATAH		0x74
#define RICOH619_AIN1DATAL		0x75
#define RICOH619_AIN0DATAH		0x76
#define RICOH619_AIN0DATAL		0x77
#define RICOH619_ILIMTHL		0x78
#define RICOH619_ILIMTHH		0x79
#define RICOH619_VBATTHL		0x7a
#define RICOH619_VBATTHH		0x7b
#define RICOH619_VADPTHL		0x7c
#define RICOH619_VADPTHH		0x7d
#define RICOH619_VUSBTHL		0x7e
#define RICOH619_VUSBTHH		0x7f
#define RICOH619_VSYSTHL		0x80
#define RICOH619_VSYSTHH		0x81
#define RICOH619_VTHMTHL		0x82
#define RICOH619_VTHMTHH		0x83
#define RICOH619_AIN1THL		0x84
#define RICOH619_AIN1THH		0x85
#define RICOH619_AIN0THL		0x86
#define RICOH619_AIN0THH		0x87
#define RICOH619_EN_ADCIR1		0x88
#define RICOH619_EN_ADCIR2		0x89
#define RICOH619_EN_ADCIR3		0x8a
#define RICOH619_IR_ADC1		0x8c
#define RICOH619_IR_ADC2		0x8d
#define RICOH619_IR_ADC3		0x8e

#define RICOH619_IOSEL			0x90
#define RICOH619_IOOUT			0x91
#define RICOH619_GPEDGE1		0x92
#define RICOH619_GPEDGE2		0x93
#define RICOH619_EN_GPIR		0x94
#define RICOH619_IR_GPR			0x95
#define RICOH619_IR_GPF			0x96
#define RICOH619_MON_IOIN		0x97
#define RICOH619_GPLED_FUNC		0x98
#define RICOH619_INTPOL			0x9c
#define RICOH619_INTEN			0x9d
#define RICOH619_INTMON			0x9e

#define RICOH619_SEC            0xa0
#define RICOH619_MIN            0xa1
#define RICOH619_HOUR           0xa2
#define RICOH619_WEEK           0xa3
#define RICOH619_DAY            0xa4
#define RICOH619_MONTH          0xa5
#define RICOH619_YEAR           0xa6
#define RICOH619_RTCADJ         0xa7
#define RICOH619_DAL_AEC        0xa8
#define RICOH619_DAL_MIN        0xa9
#define RICOH619_DAL_HOUR       0xaa
#define RICOH619_DAL_DAY        0xab
#define RICOH619_DAL_MONTH      0xac
#define RICOH619_DAL_YEAR       0xad
#define RICOH619_RTCCNT1        0xae
#define RICOH619_RTCCNT2        0xaf
#define RICOH619_PREVINDAC		0xb0
#define RICOH619_BATDAC			0xb1
#define RICOH619_CHGCTL1		0xb3
#define RICOH619_CHGCTL2		0xb4
#define RICOH619_VSYSSET		0xb5
#define RICOH619_REGISET1		0xb6
#define RICOH619_REGISET2		0xb7
#define RICOH619_CHGISET		0xb8
#define RICOH619_TIMSET			0xb9
#define RICOH619_BATSET1		0xba
#define RICOH619_BATSET2		0xbb
#define RICOH619_DIESET			0xbc
#define RICOH619_CHGSTATE		0xbd
#define RICOH619_CHGCTRL_IRFMASK	0xbe
#define RICOH619_CHGSTAT_IRFMASK1	0xbf
#define RICOH619_CHGSTAT_IRFMASK2	0xc0
#define RICOH619_CHGERR_IRFMASK		0xc1
#define RICOH619_CHGCTRL_IRR		0xc2
#define RICOH619_CHGSTAT_IRR1		0xc3
#define RICOH619_CHGSTAT_IRR2		0xc4
#define RICOH619_CHGERR_IRR		    0xc5
#define RICOH619_CHGCTRL_MONI		0xc6
#define RICOH619_CHGSTAT_MONI1		0xc7
#define RICOH619_CHGSTAT_MONI2		0xc8
#define RICOH619_CHGERR_MONI		0xc9
#define RICOH619_CHGCTRL_DETMOD1	0xca
#define RICOH619_CHGCTRL_DETMOD2	0xcb
#define RICOH619_CHGSTAT_DETMOD1	0xcc
#define RICOH619_CHGSTAT_DETMOD2	0xcd
#define RICOH619_CHGSTAT_DETMOD3	0xce
#define RICOH619_CHGERR_DETMOD1		0xcf
#define RICOH619_CHGERR_DETMOD2		0xd0
#define RICOH619_CHGEXTIF_IRFMASK   0xd1 
#define RICOH619_CHGEXTIF_IRR       0xd2 
#define RICOH619_CHGOSCCTL	    	0xd4
#define RICOH619_CHGOSCSCORESET1	0xd5
#define RICOH619_CHGOSCSCORESET2	0xd6
#define RICOH619_CHGOSCSCORESET3	0xd7
#define RICOH619_CHGOSCFREQSET1		0xd8
#define RICOH619_CHGOSCFREQSET2		0xd9
#define RICOH619_CONTROL			0xe0
#define RICOH619_SOC		    	0xe1
#define RICOH619_RE_CAP_H	    	0xe2
#define RICOH619_RE_CAP_L	    	0xe3
#define RICOH619_FA_CAP_H	    	0xe4
#define RICOH619_FA_CAP_L	    	0xe5
#define RICOH619_AGE		    	0xe6
#define RICOH619_TT_EMPTY_H	    	0xe7
#define RICOH619_TT_EMPTY_L	    	0xe8
#define RICOH619_TT_FULL_H	    	0xe9
#define RICOH619_TT_FULL_L	    	0xea
#define RICOH619_VOLTAGE_1	    	0xeb
#define RICOH619_VOLTAGE_0	    	0xec
#define RICOH619_TEMP_1		    	0xed
#define RICOH619_TEMP_0		    	0xee
#define RICOH619_CC_CTRL			0xef
#define RICOH619_CC_COUNT2	    	0xf0
#define RICOH619_CC_COUNT1	    	0xf1
#define RICOH619_CC_COUNT0	    	0xf2
#define RICOH619_CC_SUMREG3	    	0xf3
#define RICOH619_CC_SUMREG2	    	0xf4
#define RICOH619_CC_SUMREG1	    	0xf5
#define RICOH619_CC_SUMREG0	    	0xf6
#define RICOH619_CC_OFFREG1	    	0xf7
#define RICOH619_CC_OFFREG0	    	0xf8
#define RICOH619_CC_GAINREG1		0xf9
#define RICOH619_CC_GAINREG0		0xfa
#define RICOH619_CC_AVEREG1	    	0xfb
#define RICOH619_CC_AVEREG0	    	0xfc
#define RICOH619_MAX_REG			0xfc
#define RICOH619_REG_NUM          (253 - 16) 
/* RICOH619 IRQ definitions */
enum {
	RICOH619_IRQ_POWER_ON,
	RICOH619_IRQ_EXTIN,
	RICOH619_IRQ_PRE_VINDT,
	RICOH619_IRQ_PREOT,
	RICOH619_IRQ_POWER_OFF,
	RICOH619_IRQ_NOE_OFF,
	RICOH619_IRQ_WD,
	RICOH619_IRQ_CLK_STP,

	RICOH619_IRQ_DC1LIM,
	RICOH619_IRQ_DC2LIM,
	RICOH619_IRQ_DC3LIM,
	RICOH619_IRQ_DC4LIM,
	RICOH619_IRQ_DC5LIM,

	RICOH619_IRQ_ILIMLIR,
	RICOH619_IRQ_VBATLIR,
	RICOH619_IRQ_VADPLIR,
	RICOH619_IRQ_VUSBLIR,
	RICOH619_IRQ_VSYSLIR,
	RICOH619_IRQ_VTHMLIR,
	RICOH619_IRQ_AIN1LIR,
	RICOH619_IRQ_AIN0LIR,

	RICOH619_IRQ_ILIMHIR,
	RICOH619_IRQ_VBATHIR,
	RICOH619_IRQ_VADPHIR,
	RICOH619_IRQ_VUSBHIR,
	RICOH619_IRQ_VSYSHIR,
	RICOH619_IRQ_VTHMHIR,
	RICOH619_IRQ_AIN1HIR,
	RICOH619_IRQ_AIN0HIR,

	RICOH619_IRQ_ADC_ENDIR,

	RICOH619_IRQ_GPIO0,
	RICOH619_IRQ_GPIO1,
	RICOH619_IRQ_GPIO2,
	RICOH619_IRQ_GPIO3,
	RICOH619_IRQ_GPIO4,

	RICOH619_IRQ_CTC,
	RICOH619_IRQ_DALE,

	RICOH619_IRQ_FVADPDETSINT,
	RICOH619_IRQ_FVUSBDETSINT,
	RICOH619_IRQ_FVADPLVSINT,
	RICOH619_IRQ_FVUSBLVSINT,
	RICOH619_IRQ_FWVADPSINT,
	RICOH619_IRQ_FWVUSBSINT,

	RICOH619_IRQ_FONCHGINT,
	RICOH619_IRQ_FCHGCMPINT,
	RICOH619_IRQ_FBATOPENINT,
	RICOH619_IRQ_FSLPMODEINT,
	RICOH619_IRQ_FBTEMPJTA1INT,
	RICOH619_IRQ_FBTEMPJTA2INT,
	RICOH619_IRQ_FBTEMPJTA3INT,
	RICOH619_IRQ_FBTEMPJTA4INT,

	RICOH619_IRQ_FCURTERMINT,
	RICOH619_IRQ_FVOLTERMINT,
	RICOH619_IRQ_FICRVSINT,
	RICOH619_IRQ_FPOOR_CHGCURINT,
	RICOH619_IRQ_FOSCFDETINT1,
	RICOH619_IRQ_FOSCFDETINT2,
	RICOH619_IRQ_FOSCFDETINT3,
	RICOH619_IRQ_FOSCMDETINT,

	RICOH619_IRQ_FDIEOFFINT,
	RICOH619_IRQ_FDIEERRINT,
	RICOH619_IRQ_FBTEMPERRINT,
	RICOH619_IRQ_FVBATOVINT,
	RICOH619_IRQ_FTTIMOVINT,
	RICOH619_IRQ_FRTIMOVINT,
	RICOH619_IRQ_FVADPOVSINT,
	RICOH619_IRQ_FVUSBOVSINT,

	RICOH619_IRQ_FGCDET,
	RICOH619_IRQ_FPCDET,
	RICOH619_IRQ_FWARN_ADP,

	/* Should be last entry */
	RICOH619_NR_IRQS,
};

/* RICOH619 gpio definitions */
enum {
	RICOH619_GPIO0,
	RICOH619_GPIO1,
	RICOH619_GPIO2,
	RICOH619_GPIO3,
	RICOH619_GPIO4,

	RICOH619_NR_GPIO,
};

enum {
	RICOH619_DCDC1 = 0,
	RICOH619_DCDC2,
	RICOH619_DCDC3,
	RICOH619_DCDC4,
	RICOH619_DCDC5,
	RICOH619_LDO1,
	RICOH619_LDO2,
	RICOH619_LDO3,
	RICOH619_LDO4,
	RICOH619_LDO5,
	RICOH619_LDO6,
	RICOH619_LDO7,
	RICOH619_LDO8,
	RICOH619_LDO9,
	RICOH619_LDO10,
	RICOH619_LDORTC1,
	RICOH619_LDORTC2,
	RICOH619_PSO0,
	RICOH619_PSO1,
	RICOH619_PSO2,
	RICOH619_PSO3,
	RICOH619_PSO4,
};

struct ricoh619_gpio_init_data {
	unsigned output_mode_en:1;	/* Enable output mode during init */
	unsigned output_val:1;	/* Output value if it is in output mode */
	unsigned init_apply:1;	/* Apply init data on configuring gpios*/
	unsigned led_mode:1;	/* Select LED mode during init */
	unsigned led_func:1;	/* Set LED function if LED mode is 1 */
};

struct ricoh619_platform_data {
	int		num_subdevs;
	struct	ricoh619_subdev_info *subdevs;
	int (*init_port)(int irq_num); /* Init GPIO for IRQ pin */
	int		gpio_base;
	int		irq_base;
	struct ricoh619_gpio_init_data *gpio_init_data;
	int num_gpioinit_data;
	bool enable_shutdown_pin;
};

struct ricoh619_subdev_info {
	int			id;
	const char	*name;
	void		*platform_data;
};

/* ==================================== */
/* RICOH61x Power_Key device data	*/
/* ==================================== */
struct ricoh619_pwrkey_platform_data {
	int irq;
	unsigned long delay_ms;
};


extern int ricoh619_irq_init(struct i2c_client *i2c, struct regmap *regmap);
extern void ricoh619_irq_deinit(void);
extern int ricoh61x_read(struct device *dev, uint8_t reg, uint8_t *val);
extern int ricoh61x_read_bank1(struct device *dev, uint8_t reg, uint8_t *val);
extern int ricoh61x_bulk_reads(struct device *dev, u8 reg, u8 count,
								uint8_t *val);
extern int ricoh61x_bulk_reads_bank1(struct device *dev, u8 reg, u8 count,
								uint8_t *val);
extern int ricoh61x_write(struct device *dev, u8 reg, uint8_t val);
extern int ricoh61x_write_bank1(struct device *dev, u8 reg, uint8_t val);
extern int ricoh61x_bulk_writes(struct device *dev, u8 reg, u8 count,
								uint8_t *val);
extern int ricoh61x_bulk_writes_bank1(struct device *dev, u8 reg, u8 count,
								uint8_t *val);
extern int ricoh61x_set_bits(struct device *dev, u8 reg, uint8_t bit_mask);
extern int ricoh61x_clr_bits(struct device *dev, u8 reg, uint8_t bit_mask);
extern int ricoh61x_update(struct device *dev, u8 reg, uint8_t val,
								uint8_t mask);
extern int ricoh61x_update_bank1(struct device *dev, u8 reg, uint8_t val,
								uint8_t mask);
extern int ricoh619_power_off(void);

#endif
